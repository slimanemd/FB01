Looking for git in: git
Using git 2.17.1 from git

> git rev-parse --show-toplevel fatal: not a git repository (or any of the parent directories): .git
> git rev-parse --show-toplevel fatal: not a git repository (or any of the parent directories): .git
> git rev-parse --show-toplevel fatal: not a git repository (or any of the parent directories): .git
> git rev-parse --show-toplevel fatal: not a git repository (or any of the parent directories): .git
> git rev-parse --show-toplevel fatal: not a git repository (or any of the parent directories): .git
> git rev-parse --show-toplevel fatal: not a git repository (or any of the parent directories): .git
> git rev-parse --show-toplevel fatal: not a git repository (or any of the parent directories): .git
> git rev-parse --show-toplevel fatal: not a git repository (or any of the parent directories): .git
> git rev-parse --show-toplevel fatal: not a git repository (or any of the parent directories): .git
> git rev-parse --show-toplevel fatal: not a git repository (or any of the parent directories): .git
> git rev-parse --show-toplevel fatal: not a git repository (or any of the parent directories): .git
> git rev-parse --show-toplevel fatal: not a git repository (or any of the parent directories): .git
> git rev-parse --show-toplevel fatal: not a git repository (or any of the parent directories): .git

> git init
> git rev-parse --show-toplevel
> git rev-parse --git-dir                 => Open repository: /home/slimed/Desktop/Flask/Flask_Blog

> git status -z -u
> git symbolic-ref --short HEAD
> git rev-parse master
fatal: ambiguous argument 'master': unknown revision or path not in the working tree.
Use '--' to separate paths from revisions, like this:
'git <command> [<revision>...] -- [<file>...]'
> git for-each-ref --format %(refname) %(objectname) --sort -committerdate
> git remote --verbose
> git config --get commit.template

> git show :flaskblog.py
> git ls-files --stage -- /home/slimed/Desktop/Flask/Flask_Blog/flaskblog.py
> git check-ignore -v -z --stdin

> git status -z -u
> git symbolic-ref --short HEAD
> git rev-parse master
fatal: ambiguous argument 'master': unknown revision or path not in the working tree.
Use '--' to separate paths from revisions, like this:
'git <command> [<revision>...] -- [<file>...]'
> git for-each-ref --format %(refname) %(objectname) --sort -committerdate
> git remote --verbose
> git config --get commit.template

> git add -A -- .

> git status -z -u
> git symbolic-ref --short HEAD
> git rev-parse master
fatal: ambiguous argument 'master': unknown revision or path not in the working tree.
Use '--' to separate paths from revisions, like this:
'git <command> [<revision>...] -- [<file>...]'
> git for-each-ref --format %(refname) %(objectname) --sort -committerdate
> git remote --verbose
> git config --get commit.template

> git ls-files --stage -- /home/slimed/Desktop/Flask/Flask_Blog/flaskblog.py
> git cat-file -s 3b475b3c6d3390ffb3e671e2621a2b6494afd936
> git show :flaskblog.py

> git status -z -u
> git symbolic-ref --short HEAD
> git rev-parse master
fatal: ambiguous argument 'master': unknown revision or path not in the working tree.
Use '--' to separate paths from revisions, like this:
'git <command> [<revision>...] -- [<file>...]'
> git for-each-ref --format %(refname) %(objectname) --sort -committerdate
> git remote --verbose
> git config --get commit.template

> git commit --quiet --allow-empty-message --file -

*** Please tell me who you are.

Run

  git config --global user.email "you@example.com"
  git config --global user.name "Your Name"

to set your account's default identity.
Omit --global to set the identity only in this repository.

fatal: unable to auto-detect email address (got 'slimed@slixPC.(none)')

+> git config --get-all user.name
> git ls-files --stage -- /home/slimed/Desktop/Flask/Flask_Blog/flaskblog.py
> git cat-file -s 3b475b3c6d3390ffb3e671e2621a2b6494afd936
> git show :flaskblog.py
> git status -z -u
> git symbolic-ref --short HEAD
> git rev-parse master
fatal: ambiguous argument 'master': unknown revision or path not in the working tree.
Use '--' to separate paths from revisions, like this:
'git <command> [<revision>...] -- [<file>...]'
> git for-each-ref --format %(refname) %(objectname) --sort -committerdate
> git remote --verbose
> git config --get commit.template
